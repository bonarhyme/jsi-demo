/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#include "RTNConverterSpecJSI.h"

namespace facebook {
namespace react {

static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_inchesToCentimeters(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->inchesToCentimeters(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_centimetersToInches(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->centimetersToInches(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_inchesToFeet(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->inchesToFeet(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_feetToInches(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->feetToInches(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_kilometersToMiles(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->kilometersToMiles(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_milesToKilometers(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->milesToKilometers(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_feetToCentimeters(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->feetToCentimeters(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_centimetersToFeet(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->centimetersToFeet(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_yardsToMeters(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->yardsToMeters(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_metersToYards(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->metersToYards(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_milesToYards(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->milesToYards(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_yardsToMiles(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->yardsToMiles(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_feetToMeters(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->feetToMeters(rt, args[0].asNumber());
}
static jsi::Value __hostFunction_NativeConverterCxxSpecJSI_metersToFeet(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeConverterCxxSpecJSI *>(&turboModule)->metersToFeet(rt, args[0].asNumber());
}

NativeConverterCxxSpecJSI::NativeConverterCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RTNConverter", jsInvoker) {
  methodMap_["inchesToCentimeters"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_inchesToCentimeters};
  methodMap_["centimetersToInches"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_centimetersToInches};
  methodMap_["inchesToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_inchesToFeet};
  methodMap_["feetToInches"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_feetToInches};
  methodMap_["kilometersToMiles"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_kilometersToMiles};
  methodMap_["milesToKilometers"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_milesToKilometers};
  methodMap_["feetToCentimeters"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_feetToCentimeters};
  methodMap_["centimetersToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_centimetersToFeet};
  methodMap_["yardsToMeters"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_yardsToMeters};
  methodMap_["metersToYards"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_metersToYards};
  methodMap_["milesToYards"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_milesToYards};
  methodMap_["yardsToMiles"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_yardsToMiles};
  methodMap_["feetToMeters"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_feetToMeters};
  methodMap_["metersToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterCxxSpecJSI_metersToFeet};
}


} // namespace react
} // namespace facebook
