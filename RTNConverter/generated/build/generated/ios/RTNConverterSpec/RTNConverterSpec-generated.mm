/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RTNConverterSpec.h"


namespace facebook {
  namespace react {
    
    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_inchesToCentimeters(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "inchesToCentimeters", @selector(inchesToCentimeters:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_centimetersToInches(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "centimetersToInches", @selector(centimetersToInches:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_inchesToFeet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "inchesToFeet", @selector(inchesToFeet:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_feetToInches(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "feetToInches", @selector(feetToInches:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_kilometersToMiles(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "kilometersToMiles", @selector(kilometersToMiles:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_milesToKilometers(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "milesToKilometers", @selector(milesToKilometers:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_feetToCentimeters(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "feetToCentimeters", @selector(feetToCentimeters:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_centimetersToFeet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "centimetersToFeet", @selector(centimetersToFeet:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_yardsToMeters(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "yardsToMeters", @selector(yardsToMeters:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_metersToYards(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "metersToYards", @selector(metersToYards:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_milesToYards(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "milesToYards", @selector(milesToYards:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_yardsToMiles(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "yardsToMiles", @selector(yardsToMiles:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_feetToMeters(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "feetToMeters", @selector(feetToMeters:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeConverterSpecJSI_metersToFeet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "metersToFeet", @selector(metersToFeet:resolve:reject:), args, count);
    }

    NativeConverterSpecJSI::NativeConverterSpecJSI(const ObjCTurboModule::InitParams &params)
      : ObjCTurboModule(params) {
        
        methodMap_["inchesToCentimeters"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_inchesToCentimeters};
        
        
        methodMap_["centimetersToInches"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_centimetersToInches};
        
        
        methodMap_["inchesToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_inchesToFeet};
        
        
        methodMap_["feetToInches"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_feetToInches};
        
        
        methodMap_["kilometersToMiles"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_kilometersToMiles};
        
        
        methodMap_["milesToKilometers"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_milesToKilometers};
        
        
        methodMap_["feetToCentimeters"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_feetToCentimeters};
        
        
        methodMap_["centimetersToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_centimetersToFeet};
        
        
        methodMap_["yardsToMeters"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_yardsToMeters};
        
        
        methodMap_["metersToYards"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_metersToYards};
        
        
        methodMap_["milesToYards"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_milesToYards};
        
        
        methodMap_["yardsToMiles"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_yardsToMiles};
        
        
        methodMap_["feetToMeters"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_feetToMeters};
        
        
        methodMap_["metersToFeet"] = MethodMetadata {1, __hostFunction_NativeConverterSpecJSI_metersToFeet};
        
    }
  } // namespace react
} // namespace facebook
